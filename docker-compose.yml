version: '3.3'
services:
  db:
    image: postgres:12.0-alpine
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB-foodgram_dev}
      POSTGRES_USER: ${POSTGRES_USER-foodgram_dev}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD-OwOtBep9Frut}
    ports:
      - "5432:5432"
  backend:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    image: foodgram_backend
    command: gunicorn --reload config.wsgi:application --bind 0:8000
    volumes:
      - ./src/backend:/code
      - ./data:/data
      - static_data:/static
      - media_data:/media
    environment:
      SECRET_KEY: ${SECRET_KEY-REPLACE_ME}
      DEBUG: ${DEBUG-TRUE}
      DATABASE_URL: ${DATABASE_URL-postgres://foodgram_dev:OwOtBep9Frut@db:5432/foodgram_dev}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS-127.0.0.1,localhost,backend}
    restart: unless-stopped
    expose:
      - 8000
    depends_on:
      - db
      - frontend
  frontend:
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    image: foodgram_frontend
    volumes:
      - ./src/frontend:/app/result_build/
  nginx:
    build: ./docker/nginx
    image: foodgram_nginx
    ports:
      - 80:80
    volumes:
      - ./src/frontend/build:/code/frontend/
      - ./docs/redoc.html:/code/frontend/api/docs/redoc.html
      - ./docs/openapi-schema.yml:/code/frontend/api/docs/openapi-schema.yml
      - static_data:/code/admin_panel/static/
      - media_data:/code/admin_panel/media/
    depends_on:
      - backend
volumes:
  db_data:
  static_data:
  media_data:
