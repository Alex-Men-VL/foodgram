version: '3.8'
services:
  db:
    image: postgres:12.0-alpine
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB-foodgram_dev}
      POSTGRES_USER: ${POSTGRES_USER-foodgram_dev}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD-foodgram}

  backend:
    <<: &backend
      image: 'foodgram_backend:dev'
      build:
        target: development_build
        context: .
        dockerfile: ./src/backend/docker/django/Dockerfile
        args:
          DJANGO_ENV: development
    command: bash ./docker/django/gunicorn.sh
    volumes:
      - static_data:/var/www/django/static
      - media_data:/var/www/django/media
    environment:
      DJANGO_ENV: ${DJANGO_ENV-development}
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY-REPLACE_ME}
      DATABASE_URL: ${DATABASE_URL-postgres://foodgram_dev:foodgram@db:5432/foodgram_dev}
      DJANGO_DATABASE_HOST: ${DJANGO_DATABASE_HOST-db}
      DJANGO_DATABASE_PORT: ${DJANGO_DATABASE_PORT-5432}
    restart: unless-stopped
    depends_on:
      - db
      - frontend

  frontend:
    image: foodgram_frontend
    build:
      context: .
      dockerfile: ./src/frontend/docker/node/Dockerfile
    volumes:
      - ./src/frontend:/app/result_build/

volumes:
  db_data:
  static_data:
  media_data:
