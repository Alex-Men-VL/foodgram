version: '3.8'
services:
  caddy:
    image: caddy:2.5.2
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Caddy specific urls
      - ./src/backend/docker/server/production/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
      # Front
      - ./src/frontend/build:/code/frontend/
      # Api-schema
      - ./docs/redoc.html:/code/frontend/api/docs/redoc.html
      - ./docs/openapi-schema.yml:/code/frontend/api/docs/openapi-schema.yml
    depends_on:
      - backend

  backend:
    <<: &backend
      image: ${BACKEND_IMAGE}
      build:
        target: production_build
        args:
          DJANGO_ENV: production
        cache_from:
          - ${BACKEND_IMAGE}
      environment:
        DJANGO_ENV: production
        AWS_S3_ENDPOINT_URL: ${AWS_S3_ENDPOINT_URL}
        DJANGO_AWS_ACCESS_KEY_ID: ${DJANGO_AWS_ACCESS_KEY_ID}
        DJANGO_AWS_SECRET_ACCESS_KEY: ${DJANGO_AWS_SECRET_ACCESS_KEY}
        DJANGO_AWS_STORAGE_BUCKET_NAME: ${DJANGO_AWS_STORAGE_BUCKET_NAME}

  frontend:
    <<: &frontend
      image: ${FRONTEND_IMAGE}
      build:
        context: .
        dockerfile: ./src/frontend/docker/node/Dockerfile
        cache_from:
          - ${FRONTEND_IMAGE}
    volumes:
      - ./src/frontend:/app/result_build/

volumes:
  caddy_data:
  caddy_config:
